name: ci

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  lint:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - run: corepack enable

      - name: find pnpm cache path
        id: cache
        run: echo "path=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        with:
          path: ${{ steps.cache.outputs.path }}
          key: v1-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            v1-pnpm-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - run: pnpm lint --format compact

  typecheck:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - run: corepack enable

      - name: find pnpm cache path
        id: cache
        run: echo "path=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        with:
          path: ${{ steps.cache.outputs.path }}
          key: v1-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            v1-pnpm-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - run: pnpm typecheck

  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - run: corepack enable

      - name: find pnpm cache path
        id: cache
        run: echo "path=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        with:
          path: ${{ steps.cache.outputs.path }}
          key: v1-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            v1-pnpm-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - run: pnpm build

  deploy:
    needs: [build, typecheck, lint]
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: 20

      - run: corepack enable

      - name: find pnpm cache path
        id: cache
        run: echo "path=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v4
        with:
          path: ${{ steps.cache.outputs.path }}
          key: v1-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            v1-pnpm-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - run: pnpm build

      - uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ github.token }}
          publish_dir: ./dist
          cname: mhw-sieges.haglund.dev
